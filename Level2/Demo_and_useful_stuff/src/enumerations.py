# define function which creates a new type with attributes given as arg1
def enum(**enums):
    return type('Enum', (), enums)


# creation
m_covg_coll_nodes = enum(domain="domainType", params="parameters",
                         the_ref="referencing", covgs="coverages")
m_covg_nodes = enum(domain="domain", params="parameters",
                    ranges="ranges", range_alt="rangeAlternates")

# iteration over attributes
for item in [a for a in dir(m_covg_nodes) if not a.startswith('__')]:
    print(item)

    # can't work out how to get the value of each though...




#######################################################
#
# permissions.py
# Python implementation of the Class Permission
# Generated by Enterprise Architect
# Created on:      21-Mar-2020 17:33:17
# Original author: Jane Lewis
#
#######################################################

from enum import Enum


class Permission(Enum):
    """
    Enumeration to specify permission levels as they are defined in the database.
    """
    NONE = 0
    META = 1
    READ = 2
    WRITE = 3
    REGISTER = 4

# Usage:
# Use for example Permission.NONE.value to get the number 0
# Use for example Permission(1).name to get the string 'META'
# Create from a string using Permission['META']

